import java.lang.reflect.Method

apply plugin: "groovy"

version = "1.0"
description = "Spock Framework - Example Project"

// Spock works with Java 1.7 and above
sourceCompatibility = 1.7

repositories {
  // Spock releases are available from Maven Central
  mavenCentral()
  // Spock snapshots are available from the Sonatype OSS snapshot repository
  maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
  // mandatory dependencies for using Spock
  compile "org.codehaus.groovy:groovy-all:2.5.4"
  compile "org.spockframework:spock-core:1.2-groovy-2.4"
  compile group: 'org.jdom', name: 'jdom', version: '2.0.0'
  compile group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'
    compile files('/media/evgeny/Data/Projects/TestRailAnnotations/out/artifacts/TestRailAnnotations_jar/TestRailAnnotations.jar')

  //runtime fileTree(dir: '/media/evgeny/Data/Projects/TestRailAnnotations/build/libs/', include: '*.jar')


  compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.8'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
  compile gradleApi()
// https://mvnrepository.com/artifact/com.android.tools.build/gradle-api


  compile group: 'com.android.tools.build', name: 'gradle-api', version: '2.3.0'

  // optional dependencies for using Spock
  testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
  testRuntime "net.bytebuddy:byte-buddy:1.8.21"          // allows mocking of classes (in addition to interfaces)
  testRuntime "org.objenesis:objenesis:2.6"    // allows mocking of classes without default constructor (together with CGLIB)

  // dependencies used by examples in this project
  testRuntime "com.h2database:h2:1.4.197"
}

// the remaining configuration is specific to this project, and is not required for using Spock

apply from: "gradle/ide.gradle"

task collectJars(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.testRuntime
}


task(generateReport, dependsOn: 'test', type: JavaExec) {
    main = 'annotation.TestRailTask'
    classpath = sourceSets.main.runtimeClasspath

    systemProperty 'report.folder', 'build/test-results/test'
}
test.finalizedBy(generateReport)



